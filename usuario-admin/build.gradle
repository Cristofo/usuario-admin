plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'prueba.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.modelmapper:modelmapper:2.3.7'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.6'
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '2.2.2'
	implementation group: 'org.powermock', name: 'powermock-module-junit4-common', version: '2.0.7'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'prueba/example/usuario_admin/UsuarioAdminApplication.class',
					'prueba/example/usuario_admin/config/**',
					'prueba/example/usuario_admin/dto/**',
					'prueba/example/usuario_admin/entity/**',
					'prueba/example/usuario_admin/constraint/**',
					'prueba/example/usuario_admin/exception/**'
			])
		}))
	}

	reports {
		xml.required = true // Generate XML report
		csv.required = false // Disable CSV report
		html.required = true // Generate HTML report
	}
}